#include <UObjectGlobals.hpp>
#include <UFunction.hpp>
#include <SDK/Classes/PalUtility.h>

using namespace RC;
using namespace RC::Unreal;

namespace Palworld {
    UPalIndividualCharacterParameter* UPalUtility::GetIndividualCharacterParameterByIstanceID(RC::Unreal::UObject* WorldContext, Palworld::FPalInstanceID InstanceId)
    {
        if (!Self)
        {
            Self = UObjectGlobals::StaticFindObject<UPalUtility*>(nullptr, nullptr, STR("/Script/Pal.Default__PalUtility"));
        }

        static auto Function = Self->GetFunctionByName(STR("GetIndividualCharacterParameterByIstanceID"));

        // If this fails, it means an update changed the function name.
        if (!Function)
        {
            throw std::runtime_error("UPalUtility::GetIndividualCharacterParameterByIstanceID is not a valid function!");
        }

        struct {
            RC::Unreal::UObject* WorldContext;
            Palworld::FPalInstanceID InstanceId;
            UPalIndividualCharacterParameter* ReturnValue;
        }params;

        params.WorldContext = WorldContext;
        params.InstanceId = InstanceId;

        Self->ProcessEvent(Function, &params);

        return params.ReturnValue;
    }

    Palworld::FGuid UPalUtility::GetPlayerUIDByActor(RC::Unreal::AActor* Actor)
    {
        if (!Self)
        {
            Self = UObjectGlobals::StaticFindObject<UPalUtility*>(nullptr, nullptr, STR("/Script/Pal.Default__PalUtility"));
        }

        static auto Function = Self->GetFunctionByName(STR("GetPlayerUIDByActor"));

        // If this fails, it means an update changed the function name.
        if (!Function)
        {
            throw std::runtime_error("UPalUtility::GetPlayerUIDByActor is not a valid function!");
        }

        struct {
            RC::Unreal::AActor* Actor;
            Palworld::FGuid ReturnValue;
        }params;

        params.Actor = Actor;

        Self->ProcessEvent(Function, &params);

        return params.ReturnValue;
    }

    AActor* UPalUtility::GetPlayerCharacterByPlayerId(UObject* WorldContext, int PlayerId)
    {
        if (!Self)
        {
            Self = UObjectGlobals::StaticFindObject<UPalUtility*>(nullptr, nullptr, STR("/Script/Pal.Default__PalUtility"));
        }

        static auto Function = Self->GetFunctionByName(STR("GetPlayerCharacterByPlayerId"));

        // If this fails, it means an update changed the function name.
        if (!Function)
        {
            throw std::runtime_error("UPalUtility::GetPlayerCharacterByPlayerId is not a valid function!");
        }

        struct {
            RC::Unreal::UObject* WorldContext;
            int PlayerId;
            AActor* ReturnValue;
        }params;

        params.WorldContext = WorldContext;
        params.PlayerId = PlayerId;

        Self->ProcessEvent(Function, &params);

        return params.ReturnValue;
    }

    UPalTechnologyData* UPalUtility::GetTechnologyDataByPlayerUID(RC::Unreal::UObject* WorldContext, Palworld::FGuid PlayerUId)
    {
        if (!Self)
        {
            Self = UObjectGlobals::StaticFindObject<UPalUtility*>(nullptr, nullptr, STR("/Script/Pal.Default__PalUtility"));
        }

        static auto Function = Self->GetFunctionByName(STR("GetTechnologyDataByPlayerUID"));

        // If this fails, it means an update changed the function name.
        if (!Function)
        {
            throw std::runtime_error("UPalUtility::GetTechnologyDataByPlayerUID is not a valid function!");
        }

        struct {
            RC::Unreal::UObject* WorldContext;
            Palworld::FGuid PlayerUId;
            UPalTechnologyData* ReturnValue;
        }params;

        params.WorldContext = WorldContext;
        params.PlayerUId = PlayerUId;

        Self->ProcessEvent(Function, &params);

        return params.ReturnValue;
    }
}
